<?php

/**
 * @file
 * Functions to support theming in the Seven theme.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Template\Attribute;
use Drupal\Core\Url;

//use Drupal\simplenews\Entity\Subscriber;

/**
 * Implements hook_preprocess_page().
 */
function pellucid_monoset_preprocess_page(&$variables) {
  // Load this library only on front page.
  if ($variables['is_front']) {
    $variables['#attached']['library'][] = 'pellucid_monoset/front-page';
  }
}

/**
 * Implements hook_form_alter() to add classes to the search form.
 */
function pellucid_monoset_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (in_array($form_id, ['search_block_form', 'search_form'])) {
    $key = ($form_id == 'search_block_form') ? 'actions' : 'basic';
    if (!isset($form[$key]['submit']['#attributes'])) {
      $form[$key]['submit']['#attributes'] = new Attribute();
    }
    $form[$key]['submit']['#attributes']->addClass('search-form__submit');
  }
}

function pellucid_monoset_preprocess_simplenews_newsletter_body__councillors__email_html(&$variables) {
  // get reference to static var
  $v_summons = &myvariable_function('summons_text');
  // alter static var
  $v_summons = 'You are summoned to this meeting. ';
  $v_newsletter = &myvariable_function('newsletter_type');
  $v_newsletter = 'simplenews_newsletter_email';
  $v_url = &myvariable_function('absolute_url');
  $v_url = _absolute_page_url();
  $variables['simplenews_newsletter_email']  = TRUE;
}

function pellucid_monoset_preprocess_simplenews_newsletter_body__email_html(&$variables) {
  // get reference to static var
  $var = &myvariable_function('newsletter_type');
  // alter static var
  $var = 'simplenews_newsletter_email';
}

function pellucid_monoset_preprocess_node(&$variables, $hook) {
  $newsletter_type = myvariable_function('newsletter_type');
  if ($newsletter_type == 'simplenews_newsletter_email') {
    $variables['absolute_url'] = myvariable_function('absolute_url');
    $variables['simplenews_newsletter_email'] = "YES";
  } else {
    $variables['simplenews_newsletter_email'] = "NO";
  }
}
function pellucid_monoset_preprocess_username(&$variables, $hook) {
  $newsletter_type = myvariable_function('newsletter_type');
  if ($newsletter_type == 'simplenews_newsletter_email') {
    $variables['link_path'] = _absolute_page_url('<front>').$variables['link_path'];
    $variables['attributes']['href'] = $variables['link_path'];
    $variables['attributes']['about'] = $variables['link_path'];
  }
}

//function pellucid_monoset_preprocess_field__node__title__meeting(&$variables, $hook) {
//  $newsletter_type = myvariable_function('newsletter_type');
//  // $element is the render array for the field
//  $element = $variables['element'];
//  if ($element['#view_mode'] == 'email_html' and $newsletter_type == 'simplenews_newsletter_email') {
//    $summons = &myvariable_function('summons_text');
//    $summons_text = ($summons != 'initial_value') ? $summons : '';
//    $variables['news_title_prefix'] = $summons_text;
//  }
//}

function pellucid_monoset_preprocess_field__node__title__agenda(&$variables, $hook) {
  $newsletter_type = myvariable_function('newsletter_type');
  if ($newsletter_type == 'simplenews_newsletter_email') {
    $variables['simplenews_newsletter_email'] = "YES";
  } else {
    $variables['simplenews_newsletter_email'] = "NO";
  }
}

function pellucid_monoset_preprocess_node__agenda__email_html(&$variables, $hook) {
  $newsletter_type = myvariable_function('newsletter_type');
  if ($variables['view_mode'] == 'email_html' and $newsletter_type == 'simplenews_newsletter_email') {
    $variables['simplenews_newsletter_email'] = "YES";
    $variables['link_path'] = _absolute_page_url('<front>').$variables['url'];
  } else {
    $variables['simplenews_newsletter_email'] = "NO";
  }
}

//function pellucid_monoset_preprocess_field__node__uid__meeting(&$variables, $hook) {
//  $newsletter_type = myvariable_function('newsletter_type');
//  // $element is the render array for the field
//  $element = $variables['element'];
//  if ($element['#view_mode'] == 'email_html' and $newsletter_type == 'simplenews_newsletter_email') {
//    $variables['omit_uid_field'] = TRUE;
//  }
//}

function pellucid_monoset_preprocess_field__node__created__meeting(&$variables, $hook) {
  $newsletter_type = myvariable_function('newsletter_type');
  if ($variables['view_mode'] == 'email_html' and $newsletter_type == 'simplenews_newsletter_email') {
    $variables['simplenews_newsletter_email'] = "YES";
    $variables['link_path'] = _absolute_page_url('<front>').$variables['url'];
    $variables['include_created'] = FALSE;
  } else {
    $variables['simplenews_newsletter_email'] = "NO";
  }
}

function pellucid_monoset_preprocess_field__node__field_agenda__meeting(&$variables, $hook) {
  $newsletter_type = myvariable_function('newsletter_type');
  if ($newsletter_type == 'simplenews_newsletter_email') {
    $variables['meeting_date_p'] = TRUE;
    $variables['simplenews_newsletter_email'] = "YES";
    $summons = &myvariable_function('summons_text');
    $summons_text = ($summons != 'initial_value') ? $summons : '';
    $variables['summons_text'] = $summons_text;
  }
  else {
    $variables['simplenews_newsletter_email'] = "NO";
  }
}

function pellucid_monoset_preprocess_field__node__body__agenda(&$variables, $hook) {
  $newsletter_type = myvariable_function('newsletter_type');
  if ($newsletter_type == 'simplenews_newsletter_email') {
    $variables['meeting_date_p'] = TRUE;
    $variables['simplenews_newsletter_email'] = "YES";
  }
  else {
    $variables['simplenews_newsletter_email'] = "NO";
  }
}

function pellucid_monoset_preprocess_field__node__field_meeting_date__meeting(&$variables, $hook) {
  $newsletter_type = myvariable_function('newsletter_type');
  if ($newsletter_type == 'simplenews_newsletter_email') {
    $variables['simplenews_newsletter_email'] = "YES";
  } else {
    $variables['simplenews_newsletter_email'] = "NO";
  }
}


function pellucid_monoset_preprocess_field__node__field_meeting_minutes__meeting(&$variables, $hook){
  $newsletter_type = myvariable_function('newsletter_type');
  if ($newsletter_type == 'simplenews_newsletter_email') {
    $variables['minutes_title'] = $variables['items']['0']['content']['#title'];
    $given_url = $variables['items']['0']['content']['#url']->toString();
    $variables['absolute_url']  = _absolute_page_url('<front>').ltrim($given_url, '/');
  }
}

function pellucid_monoset_preprocess_field__node__field_meeting_place__meeting(&$variables, $hook){
  $newsletter_type = myvariable_function('newsletter_type');
  if ($newsletter_type == 'simplenews_newsletter_email') {
    $variables['simplenews_newsletter_email']  = TRUE;
  } else {
    $variables['simplenews_newsletter_email']  = FALSE;
  }
}

function pellucid_monoset_preprocess_field__node__field_agenda_status__agenda(&$variables, $hook){
  $newsletter_type = myvariable_function('newsletter_type');
  if ($newsletter_type == 'simplenews_newsletter_email') {
    $variables['simplenews_newsletter_email']  = TRUE;
  } else {
    $variables['simplenews_newsletter_email']  = FALSE;
  }
}

function pellucid_monoset_preprocess_taxonomy_term__meeting_place(&$variables, $hook) {
  $newsletter_type = myvariable_function('newsletter_type');
  // $element is the render array for the field
  //$element = $variables['element'];
  //if ($element['#view_mode'] == 'email_html' and $newsletter_type == 'simplenews_newsletter_email') {
  if ($newsletter_type == 'simplenews_newsletter_email') {
    $variables['meeting_place_h2'] = FALSE;
    $variables['url'] = _absolute_page_url('<front>').$variables['url'];
  }
}

function &myvariable_function($item = 'default') {
  $var = &drupal_static(__FUNCTION__);
  if (!isset($var)) {
    // generate contents of static variable
    $var = array();
  }
  if (!isset($var[$item])) {
    // generate initial contents of static variable to be overwritten
    $var[$item] = 'initial_value';
  }
  return $var[$item];
}

function _absolute_page_url($route = '<current>'){
  $newsletter_url = Url::fromRoute($route, [], ['absolute' => TRUE])->toString();
  return strpos($newsletter_url, '/simplenews') ?substr($newsletter_url, 0, strpos($newsletter_url, "/simplenews")):$newsletter_url;
}

